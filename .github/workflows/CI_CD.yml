name: ecommerce pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: Ordering
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: Ordering
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/Ordering

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8 # Your Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Clear Python Cache
        run: |
          pip cache purge

      - name: Run migrations
        run: python manage.py migrate

      - name: Run tests
        run: python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Zip the ecommerce
        run: zip -r ecommerce.zip .

      # - name: Upload to S3
      #   run: |
      #     aws s3 cp ecommerce.zip s3://my-terraform-savanna-bucket/ecommerce.zip
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: "us-east-1"

      # - name: Deploy to EC2 using CodeDeploy
      #   run: |
      #     aws deploy create-deployment \
      #       --application-name ecommerce \
      #       --deployment-config-name CodeDeployDefault.AllAtOnce \
      #       --s3-location bucket=my-terraform-savanna-bucket,bundleType=zip,key=ecommerce.zip
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: "us-east-1"

      # - name: Run database migrations
      #   run: |
      #     ssh -o StrictHostKeyChecking=no ubuntu@ec2-54-91-142-2.compute-1.amazonaws.com << 'EOF'
      #       cd /home/ubuntu/ecommerce
      #       source /home/ubuntu/env/bin/activate
      #       python manage.py migrate
      #     EOF
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
